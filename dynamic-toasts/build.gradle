/*
 * Copyright 2017-2021 Pranav Pandey
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode mavenVersionCode
        versionName mavenVersion
    }

    sourceSets {
        main.res.srcDirs 'res'
    }
}

dependencies {
    api "com.pranavpandey.android:dynamic-utils:${versions.dynamic}"
}

if (project.rootProject.file('local.properties').exists()) {
    apply from: 'bintray.gradle'
}

task generateJavadoc() {
    description "Generates Javadoc."
}

project.afterEvaluate {
    android.libraryVariants.all { variant ->
        def task = project.tasks.create("generate${variant.name.capitalize()}Javadoc", Javadoc) {
            title "${referenceTitle} (${project.android.defaultConfig.versionName})"
            description "Generates Javadoc for $variant.name."

            source = variant.sourceSets.collect { it.java.sourceFiles }.inject { m, i -> m + i }
            doFirst {
                classpath = project.files(variant.javaCompileProvider.get().classpath.files,
                        project.android.getBootClasspath())
            }

            if (JavaVersion.current().isJava8Compatible()) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }

            exclude "**/R", "**/R.**", "**/R\$**", "**/BuildConfig*"

            if (JavaVersion.current().isJava8Compatible()) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }

            options.windowTitle = "${referenceTitle} (${project.android.defaultConfig.versionName})"
            options.memberLevel = JavadocMemberLevel.PROTECTED
            options.links('http://docs.oracle.com/javase/8/docs/api')
            options.links('https://developer.android.com/reference')
            options.author = false

            failOnError false
        }

        task.dependsOn "assemble${variant.name.capitalize()}"
        generateJavadoc.dependsOn task
    }
}
